var rasterizerFontPixMap = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x00, ' '
    0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x20, 0x00, // 0x01, '!'
    0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x02, '"'
    0x50, 0x50, 0xf8, 0x50, 0xf8, 0x50, 0x50, 0x00, // 0x03, '#'
    0x20, 0x78, 0xa0, 0x70, 0x28, 0xf0, 0x20, 0x00, // 0x04, '$'
    0xc0, 0xc8, 0x10, 0x20, 0x40, 0x98, 0x18, 0x00, // 0x05, '%'
    0x60, 0x90, 0xa0, 0x40, 0xa8, 0x90, 0x68, 0x00, // 0x06, '&'
    0x60, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x07, '''
    0x10, 0x20, 0x40, 0x40, 0x40, 0x20, 0x10, 0x00, // 0x08, '('
    0x40, 0x20, 0x10, 0x10, 0x10, 0x20, 0x40, 0x00, // 0x09, ')'
    0x00, 0x20, 0xa8, 0x70, 0xa8, 0x20, 0x00, 0x00, // 0x0a, '*'
    0x00, 0x20, 0x20, 0xf8, 0x20, 0x20, 0x00, 0x00, // 0x0b, '+'
    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x20, 0x40, // 0x0c, ','
    0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, // 0x0d, '-'
    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, // 0x0e, '.'
    0x00, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, // 0x0f, '/'
    0x70, 0x88, 0x98, 0xa8, 0xc8, 0x88, 0x70, 0x00, // 0x10, '0'
    0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00, // 0x11, '1'
    0x70, 0x88, 0x08, 0x10, 0x20, 0x40, 0xf8, 0x00, // 0x12, '2'
    0xf8, 0x10, 0x20, 0x10, 0x08, 0x88, 0x70, 0x00, // 0x13, '3'
    0x10, 0x30, 0x50, 0x90, 0xf8, 0x10, 0x10, 0x00, // 0x14, '4'
    0xf8, 0x80, 0xf0, 0x08, 0x08, 0x88, 0x70, 0x00, // 0x15, '5'
    0x30, 0x40, 0x80, 0xf0, 0x88, 0x88, 0x70, 0x00, // 0x16, '6'
    0xf8, 0x08, 0x10, 0x10, 0x20, 0x20, 0x20, 0x00, // 0x17, '7'
    0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00, // 0x18, '8'
    0x70, 0x88, 0x88, 0x78, 0x08, 0x10, 0x60, 0x00, // 0x19, '9'
    0x00, 0x60, 0x60, 0x00, 0x60, 0x60, 0x00, 0x00, // 0x1a, ':'
    0x00, 0x60, 0x60, 0x00, 0x60, 0x20, 0x40, 0x00, // 0x1b, ';'
    0x10, 0x20, 0x40, 0x80, 0x40, 0x20, 0x10, 0x00, // 0x1c, '<'
    0x00, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0x00, 0x00, // 0x1d, '='
    0x40, 0x20, 0x10, 0x08, 0x10, 0x20, 0x40, 0x00, // 0x1e, '>'
    0x70, 0x88, 0x08, 0x10, 0x20, 0x00, 0x20, 0x00, // 0x1f, '?'
    0x70, 0x88, 0xb8, 0xa8, 0xb8, 0x80, 0x70, 0x00, // 0x20, '@'
    0x70, 0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x00, // 0x21, 'A'
    0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0xf0, 0x00, // 0x22, 'B'
    0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x00, // 0x23, 'C'
    0xe0, 0x90, 0x88, 0x88, 0x88, 0x90, 0xe0, 0x00, // 0x24, 'D'
    0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0xf8, 0x00, // 0x25, 'E'
    0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0x00, // 0x26, 'F'
    0x70, 0x88, 0x80, 0xb8, 0x88, 0x88, 0x78, 0x00, // 0x27, 'G'
    0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x00, // 0x28, 'H'
    0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00, // 0x29, 'I'
    0x38, 0x10, 0x10, 0x10, 0x10, 0x90, 0x60, 0x00, // 0x2a, 'J'
    0x88, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x88, 0x00, // 0x2b, 'K'
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8, 0x00, // 0x2c, 'L'
    0x88, 0xd8, 0xa8, 0xa8, 0x88, 0x88, 0x88, 0x00, // 0x2d, 'M'
    0x88, 0x88, 0xc8, 0xa8, 0x98, 0x88, 0x88, 0x00, // 0x2e, 'N'
    0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, // 0x2f, 'O'
    0xf0, 0x88, 0x88, 0xf0, 0x80, 0x80, 0x80, 0x00, // 0x30, 'P'
    0x70, 0x88, 0x88, 0x88, 0xa8, 0x90, 0x68, 0x00, // 0x31, 'Q'
    0xf0, 0x88, 0x88, 0xf0, 0xa0, 0x90, 0x88, 0x00, // 0x32, 'R'
    0x78, 0x80, 0x80, 0x70, 0x08, 0x08, 0xf0, 0x00, // 0x33, 'S'
    0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, // 0x34, 'T'
    0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, // 0x35, 'U'
    0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00, // 0x36, 'V'
    0x88, 0x88, 0x88, 0xa8, 0xa8, 0xa8, 0x50, 0x00, // 0x37, 'W'
    0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0x00, // 0x38, 'X'
    0x88, 0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x00, // 0x39, 'Y'
    0xf8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xf8, 0x00, // 0x3a, 'Z'
    0x70, 0x40, 0x40, 0x40, 0x40, 0x40, 0x70, 0x00, // 0x3b, '['
    0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x00, 0x00, // 0x3c, '\'
    0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00, // 0x3d, ']'
    0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x3e, '^'
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, // 0x3f, '_'
    0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0x40, '`'
    0x00, 0x00, 0x70, 0x08, 0x78, 0x88, 0x78, 0x00, // 0x41, 'a'
    0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0xf0, 0x00, // 0x42, 'b'
    0x00, 0x00, 0x70, 0x80, 0x80, 0x88, 0x70, 0x00, // 0x43, 'c'
    0x08, 0x08, 0x68, 0x98, 0x88, 0x88, 0x78, 0x00, // 0x44, 'd'
    0x00, 0x00, 0x70, 0x88, 0xf8, 0x80, 0x70, 0x00, // 0x45, 'e'
    0x30, 0x48, 0x40, 0x40, 0xe0, 0x40, 0x40, 0x00, // 0x46, 'f'
    0x00, 0x00, 0x78, 0x88, 0x78, 0x08, 0x70, 0x00, // 0x47, 'g'
    0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00, // 0x48, 'h'
    0x20, 0x00, 0x60, 0x20, 0x20, 0x20, 0x70, 0x00, // 0x49, 'i'
    0x10, 0x00, 0x30, 0x10, 0x10, 0x90, 0x60, 0x00, // 0x4a, 'j'
    0x80, 0x80, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x00, // 0x4b, 'k'
    0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00, // 0x4c, 'l'
    0x00, 0x00, 0xd0, 0xa8, 0xa8, 0x88, 0x88, 0x00, // 0x4d, 'm'
    0x00, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00, // 0x4e, 'n'
    0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, // 0x4f, 'o'
    0x00, 0x00, 0xf0, 0x88, 0xf0, 0x80, 0x80, 0x00, // 0x50, 'p'
    0x00, 0x00, 0x78, 0x88, 0x78, 0x08, 0x08, 0x00, // 0x51, 'q'
    0x00, 0x00, 0x58, 0x60, 0x40, 0x40, 0x40, 0x00, // 0x52, 'r'
    0x00, 0x00, 0x70, 0x80, 0x70, 0x08, 0xf0, 0x00, // 0x53, 's'
    0x20, 0x20, 0x70, 0x20, 0x20, 0x20, 0x18, 0x00, // 0x54, 't'
    0x00, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00, // 0x55, 'u'
    0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00, // 0x56, 'v'
    0x00, 0x00, 0x88, 0x88, 0xa8, 0xa8, 0x50, 0x00, // 0x57, 'w'
    0x00, 0x00, 0x88, 0x50, 0x20, 0x50, 0x88, 0x00, // 0x58, 'x'
    0x00, 0x00, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00, // 0x59, 'y'
    0x00, 0x00, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0x00, // 0x5a, 'z'
    0x10, 0x20, 0x20, 0x40, 0x20, 0x20, 0x10, 0x00, // 0x5b, '{'
    0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x00, // 0x5c, '|'
    0x40, 0x20, 0x20, 0x10, 0x20, 0x20, 0x40, 0x00, // 0x5d, '}'
    0x00, 0x00, 0x48, 0xa8, 0x90, 0x00, 0x00, 0x00, // 0x5e, '~'
    0xa8, 0x50, 0xa8, 0x50, 0xa8, 0x50, 0xa8, 0x50, // 0x5f, nob
    0x70, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x90, 0x08, // 0x60, 'Ą'
    0x10, 0x70, 0xa8, 0x80, 0x80, 0x88, 0x70, 0x00, // 0x61, 'Ć'
    0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0xf8, 0x10, // 0x62, 'Ę'
    0x80, 0x80, 0xa0, 0xc0, 0x80, 0x80, 0xf8, 0x00, // 0x63, 'Ł'
    0x10, 0xa8, 0x88, 0xc8, 0xa8, 0x98, 0x88, 0x00, // 0x64, 'Ń'
    0x10, 0x70, 0xa8, 0x88, 0x88, 0x88, 0x70, 0x00, // 0x65, 'Ó'
    0x10, 0x78, 0xa0, 0x80, 0x70, 0x08, 0xf0, 0x00, // 0x66, 'Ś'
    0x10, 0xf8, 0x28, 0x10, 0x20, 0x40, 0xf8, 0x00, // 0x67, 'Ź'
    0x20, 0xf8, 0x08, 0x10, 0x20, 0x40, 0xf8, 0x00, // 0x68, 'Ż'
    0x00, 0x00, 0x70, 0x08, 0x78, 0x88, 0x78, 0x10, // 0x69, 'ą'
    0x10, 0x20, 0x00, 0x70, 0x80, 0x88, 0x70, 0x00, // 0x6a, 'ć'
    0x00, 0x00, 0x70, 0x88, 0xf8, 0x80, 0x78, 0x10, // 0x6b, 'ę'
    0x60, 0x20, 0x30, 0x20, 0x60, 0x20, 0x70, 0x00, // 0x6c, 'ł'
    0x10, 0x20, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x00, // 0x6d, 'ń'
    0x10, 0x20, 0x00, 0x70, 0x88, 0x88, 0x70, 0x00, // 0x6e, 'ó'
    0x10, 0x20, 0x70, 0x80, 0x70, 0x08, 0xf0, 0x00, // 0x6f, 'ś'
    0x10, 0x20, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0x00, // 0x70, 'ź'
    0x20, 0x00, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0x00  // 0x71, 'z'
];

function rasterizerDrawLineH(x1, x2, y)
{
    if (y < 0 && y >= fbHeight) {
        return;
    }
    
    x1 = x1 < 0 ? 0 : x1;
    x1 = x1 >= fbWidth ? fbWidth - 1 : x1;   
    x2 = x2 < 0 ? 0 : x2;
    x2 = x2 >= fbWidth ? fbWidth - 1 : x2;
    
    if (x2 < x1) {
        var tmp = x1;
        
        x1 = x2;
        x2 = tmp;
    }
    
    for (var i = x1; i <= x2; i++) {
        fbSet(i, y);
    }
}

function rasterizerDrawLineV(y1, y2, x)
{
    if (x < 0 && x >= fbWidth) {
        return;
    }
    
    y1 = y1 < 0 ? 0 : y1;
    y1 = y1 >= fbHeight ? fbHeight - 1 : y1;
    y2 = y2 < 0 ? 0 : y2;
    y2 = y2 >= fbHeight ? fbHeight - 1 : y2;
    
    if (y2 < y1) {
        var tmp = y1;
        
        y1 = y2;
        y2 = tmp;
    }
    
    for (var i = y1; i <= y2; i++) {
        fbSet(x, i);
    }
} 

function rasterizerDrawRect(x1, y1, x2, y2)
{
    rasterizerDrawLineH(x1, x2, y1);
    rasterizerDrawLineH(x1, x2, y2);
    rasterizerDrawLineV(y1, y2, x1);
    rasterizerDrawLineV(y1, y2, x2);
}

function rasterizerDrawChar(x, y, c)
{
    var code;

    if (typeof c !== 'string' || c.length !== 1) {
        return;
    }

    if (c.charCodeAt(0) >= String(' ').charCodeAt(0) && c.charCodeAt(0) <= String('~').charCodeAt(0)) {
        code = c.charCodeAt(0) - String(' ').charCodeAt(0); 
    } else {
        switch (c.charAt(0)) {
            case 'Ą': code = 0x60; break; 
            case 'Ć': code = 0x61; break; 
            case 'Ę': code = 0x62; break;
            case 'Ł': code = 0x63; break; 
            case 'Ń': code = 0x64; break; 
            case 'Ó': code = 0x65; break;
            case 'Ś': code = 0x66; break; 
            case 'Ź': code = 0x67; break; 
            case 'Ż': code = 0x68; break;
            case 'ą': code = 0x69; break; 
            case 'ć': code = 0x6a; break; 
            case 'ę': code = 0x6b; break;
            case 'ł': code = 0x6c; break; 
            case 'ń': code = 0x6d; break; 
            case 'ó': code = 0x6e; break;
            case 'ś': code = 0x6f; break; 
            case 'ź': code = 0x70; break; 
            case 'ż': code = 0x71; break;
            default: code = 0x5f;
        }
    }

    for (var _y = 0; _y < 8; _y++) {
        for (var _x = 0; _x < 6; _x++) {
            if (rasterizerFontPixMap[(code << 3) + _y] & (0x80 >> _x)) {
                fbSet(x + _x, y + _y);
            }
        }
    }
}

function rasterizerDrawText(x, y, text)
{
    for (var i = 0; i < text.length; i++) {
        rasterizerDrawChar(x + i * 6, y, text.charAt(i));
    }
}
